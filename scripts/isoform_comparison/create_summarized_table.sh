prefix=$1

cat all_summarized_counts.tsv | perl -ne 'BEGIN { %m=("G029"=>[0,"Gencode V29"],"all"=>[1,"Union of Annotations"],"comp"=>[2,"Competing Tech."],"short"=>[3,"Short Reads"],"same"=>[4,"Pre-FLAIR"]); %m2=("oxflair"=>"comp","pbflair"=>"comp","pb"=>"comp","ox"=>"comp","pbraw"=>"same","oxraw"=>"same"); } chomp; ($n,$c,$pcts)=split(/\t/,$_); $pcts=~s/,/\|/g; $suf="all"; if($n=~/\.ic$/) { $suf="ic"; $n=~s/\.ic$//;} $n=~/^(.+)_vs_(.+)$/; $n1=$1; $n2=$2; next if($n1=~/(G029)|(all)/); if($m2{$n2}) { $n2=$m2{$n2}; } if(!$h{$n1.".$suf"}) { $h{$n1.".$suf"}=["NA","NA","NA","NA","NA"]; } if($n=~/na12878_short_vs_pb/) { $n2="same"; } $h{$n1.".$suf"}[$m{$n2}[0]]=$pcts; $tc{$n1.".$suf"}=$c; END { print "Sample\tTotal Transcripts\t".join("\t",(map { $_->[1]; } sort { $a->[0] <=> $b->[0] } values %m))."\n"; for $n (sort {$a cmp $b} keys %h) { $tc_=$tc{$n}; print "$n"."_'$prefix'\t$tc_\t".join("\t",@{$h{$n}})."\n"; } }' > all_summarized_counts.tsv.sorted.table
